%% model the dynamics of the percentage of activated Gq-GPCRs
% use R for activated receptor, r for unactivated
function dR_particle_dt_func = get_dR_particle_dt_func(theta, other_settings, NE_func, NE_spont, DA_func, DA_spont, glu_cleft, t0)
NE = NE_func(t0); % t0 is the current time, it should be distinguishable with the general time t
DA = DA_func(t0);
Hill_coeff = 2;
other_degrade = 0.8;
dR_particle_dt_func = @(act_cPKC_particle, R_particle, t) R_particle * get_transition_matrix(act_cPKC_particle, t, NE, NE_func, NE_spont, DA, DA_func, DA_spont, ...
    glu_cleft, Hill_coeff, other_degrade, theta, other_settings);
end

function transition_matrix = get_transition_matrix(act_cPKC_particle, t, NE, NE_func, NE_spont, DA, DA_func, DA_spont, ...
    glu_cleft, Hill_coeff, other_degrade, theta, other_settings)
b_recep_active = theta('b_recep_active');
K_R_degrade_cPKC = theta('K_R_degrade_cPKC');
NE_thre = theta('')
cPKC = mean(act_cPKC_particle(:,2));

if NE > NE_spont + NE_thre
    if DA > DA_spont + 0.1
        activate = b_recep_active * (NE_func(t)-NE_thre + 0.6 * DA_func(t) + 0.05 * max(0, glu_cleft-0.1));
        % deactivate = Hill_coeff * Hill_func(cPKC, 2, K_R_degrade_cPKC) + other_degrade;
        deactivate = Hill_coeff * cPKC + other_degrade;
    else
        activate = b_recep_active * (NE_func(t)-NE_thre + 0.05 * max(0, glu_cleft-0.1));
        % deactivate = Hill_coeff * Hill_func(cPKC, 2, K_R_degrade_cPKC) + other_degrade;
        deactivate = Hill_coeff * cPKC + other_degrade;
    end
else
    activate = 0;
    % deactivate = Hill_coeff * Hill_func(cPKC, 2, 0.2) + other_degrade;
    deactivate = Hill_coeff * cPKC + other_degrade;
end

if ~other_settings('Gq_GPCR') % block Gq-GPCR by iBARK
    activate = 0;
end

transition_matrix = [-activate activate; deactivate -deactivate];
end



